假设你正在爬楼梯。需要 n 阶你才能到达楼顶。

每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？

注意：给定 n 是一个正整数。

//这是一个动态规划的题 我特么终于了解什么是动态规划了

//这种解法会超时，原因是重复计算了好多遍已经有结果的计算
int climbStairs(int n) 
{
   if (n == 1)
    {
        return 1;
    }

    if (n == 2)
    {
        return 2;
    }

    return climbStairs(n - 1) + climbStairs(n - 2);
}

//标准解法
int climbStairs(int n) 
{
    int p = 0, q = 0, r = 1;
    for (int i = 1; i <= n; ++i) 
    {
        p = q; 
        q = r; 
        r = p + q;
    }
        return r;
}
