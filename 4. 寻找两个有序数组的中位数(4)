给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。

请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。

你可以假设 nums1 和 nums2 不会同时为空。

示例 1:

nums1 = [1, 3]
nums2 = [2]

则中位数是 2.0
示例 2:

nums1 = [1, 2]
nums2 = [3, 4]

则中位数是 (2 + 3)/2 = 2.5

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/median-of-two-sorted-arrays
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//第一次提交
class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) 
    {
        vector<int> vTemp;
        int i = 0, j = 0;
        while (i < nums1.size() || j < nums2.size())
        {
            if (i >= nums1.size())
            {
                vTemp.push_back(nums2[j]);
                j++;
            }
            else if (j >= nums2.size())
            {
                vTemp.push_back(nums1[i]);
                i++;
            }
            else
            {
                if (nums1[i] <= nums2[j])
                {
                    vTemp.push_back(nums1[i]);
                    i++;
                }
                else
                {
                    vTemp.push_back(nums2[j]);
                    j++;
                }
            }
        }

        if (vTemp.size() % 2 == 0)
        {
            return (double)(vTemp[vTemp.size() / 2] + vTemp[vTemp.size() / 2 - 1]) / 2;
        }
        else
        {
            return vTemp[vTemp.size() / 2];
        }
    }
};

//此题只有最基本的思路，所以之后的代码会根据答案来做一下
